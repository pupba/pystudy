stext1 = """파이썬에서 자료형은 class라고 생각하면 된다.
모든 자료형은 class로 구현되어 있으며 __class__속성을 통해 자료형을 알 수 있다.

# __class__ 사용 예시👇
a:int = 1
print(a.__class__)
# 출력 -> <class 'int'>


또 다른 방법으로 type() 함수를 사용하면된다.
사용 예시👇
type(None)
type(True)
type(a)


자료형의 종류
  - 숫자형 : int, float, complex
  - 시퀀스 : str, list, tuple, dic, set
  - 기타 : None, Bool, Function
"""
stext2 = """🐱int() : 10진 정수로 변환하는 함수
# 10 -> 양의 정수
# -10 -> 음의 정수


🐱bin() : 2진 정수로 변환하는 함수
# 0b11 -> 2진수 정수


🐱oct() : 8진 정수로 변환하는 함수
# 0o12 -> 8진수 정수


🐱hex() : 16진 정수로 변환하는 함수
# 0x1a -> 16진수 정수


🐱Python3부터 arbitrary precision을 지원하여 오버플로우가 발생하지 않게 되었다.(long 타입 삭제)

🐱Arbitrary precision : 현재 남아있는 만큼의 가용 메모리를 수 표현에 가져다 쓸 수 있는 형태"""
stext3 = """🐱float() : 소수로 변환하는 함수
# 0.1 -> 양의 소수
# -0.12 -> 음의 소수
# 32.3e100 -> 지수 표기법, 지수 값이 계산된 값이 나옴
# 32.3E100 -> 지수 표기법, 소수e + ~ 형태로 값이 나옴


🐱complex(실수부, 허수부) : 복소수를 생성하는 함수
# 3.14j -> 복소수 표현
# 45.j -> 복소수 표현
# 3+10j -> 실수부, 허수부 표현"""
stext4 = """🐱시퀀스 자료형 끼리는 함수를 통해 변환 가능하다.

🐱str() : 문자열로 바꿔주는 함수
# 파이썬의 문자열은 "", ''를 구분하지 않고 둘다 문자열로 사용
# 문자 타입이 없으며, 한 글자도 문자열로 표현
# +, * 연산자를 사용할 수 있다.
# 여러개의 문자가 메모리상에 한 줄로 늘어져서 저장되는 형태로 슬라이싱, 인덱싱을 사용 가능

사용예시👇
st1:str = "안녕하세요"
st2:str = '안녕하세요'
st3:str = '''안녕하세요''' # 여러줄 주석 또는 문자열
st4:str = \"""안녕하세요\""" # 여러줄 주석 또는 문자열

🐱list() : 리스트로 바꿔주는 함수
# 리스트는 값들이 쉼표(,)로 구분되고, 대괄호([])로 묶인 자료형
# 리스트에 어떤 자료형이든 넣을 수 있다.
# 다향한 제어 메서드들을 지원한다.
# 리스트 컴프리헨션(Comprehension)으로 리스트를 동적으로 생성 가능하다.

사용예시👇
l1:list = [1,2,3,4]
l2:list = list("hello")
l3:list = [i for in range(5)] # 0~4 까지 정수가 들어간 리스트

🐱tuple() : 튜플로 바꿔주는 함수
# 값들이 쉼표(,)로 구분되고 소괄호(())로 묶인 자료형
# 튜플을 구성하는 값을 수정할 수 없다는 것을 제외하곤 리스트와 같다.

사용예시👇
t1:tuple = (1,2,3)
t2:tuple = tuple([1,2,3])
t3:tuple = 1, # 원소가 1개인 경우"""
stext5 = """🐱dict() : 사전으로 바꿔주는 함수
# 키:값 쌍으로 이루어진 값들이 쉼표(,)로 구분되고 소괄호(\{\})로 묶인 자료형
# 키는 숫자, 문자열만 사용
# 값은 어떤 자료형이든 가능

사용예시👇
d1:dict = {'a':[1,2,3,4],'b':1}
d1:dict = dict([[1,2],[2,3],['a',10]])

🐱set() : 집합으로 바꿔주는 함수
# 값들이 쉼표(,)로 구분되고 소괄호(\{\})로 묶인 자료형
# 내부의 값들의 순서가 없다.
# 내부의 값들에 중복이 없다.

사용예시👇
s1:set = {1,2,3,4}
s2:set = set([1,1,1,2]) # {1,2}가 됨

🐱NoneType : 변수가 비어있음을 나타내는 자료형

사용예시👇
print(None)
a = None

🐱Bool : True, False로 참,거짓을 나타내는 자료형

bool() : 자료형을 bool로 변경

사용예시👇
print(True)
print(False)
t = bool(10)
f = bool(0)

🐱Function : 함수 자체도 자료형이 될 수 있다."""